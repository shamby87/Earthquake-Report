apply plugin: 'com.android.application'

// Load Jacoco Only if needed
if (jacocoEnabled.toBoolean()) {
    project.logger.lifecycle('Applying jacoco build file: jacoco.gradle')
    apply from: rootProject.file("jacoco.gradle")
}


// General switch for tests types this control report generation but not yet unit test selection - TODO Make this a flag
def carvedTests = project.hasProperty('carvedTests')// ? project.getProperty('carvedTests') : false //Default value false

def carvedTestSrcDir = "src/allCarvedTest"
def testReportPrefix = "${buildDir}/carvedTest/testExecution"
def coverageReportPrefix = "${buildDir}/carvedTest/coverage"

if (carvedTests) {
    if (project.hasProperty('testName')) {
        def testName = project.getProperty('testName')
        println ""
        println "* Processing Carved Test ${testName}"
        println ""

        carvedTestSrcDir = "src/carvedTest/${testName}"

        testReportPrefix = "${buildDir}/carvedTest/${testName}/testExecution"
        coverageReportPrefix = "${buildDir}/carvedTest/${testName}/coverage"
    }
}

android {
    compileSdkVersion 27

    // Change the src folder for carved tests
    sourceSets {
        test {
            if (carvedTests) {
                java.srcDirs = ["$carvedTestSrcDir"]
            }
        }
    }

    defaultConfig {
        applicationId 'com.badarshahzad.android.earthreport'
        minSdkVersion 23
        targetSdkVersion 27
        versionCode 8
        versionName "2.5"

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        multiDexEnabled true

    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }

        debug {
            testCoverageEnabled jacocoEnabled.toBoolean()
        }
    }
    productFlavors {
    }

    testOptions {
        unitTests {
            includeAndroidResources = true
        }

        animationsDisabled true

        unitTests.all {

            jvmArgs "-Xmx2g"

            // Nices output on the console/logs
            testLogging {
                events "passed", "skipped", "failed", "standardOut", "standardError"
                outputs.upToDateWhen { false }
                showStandardStreams = true
            }

            test {
                //Get last path of default set path.
                def junitXmlTestTaskName = file("$reports.junitXml.destination").name
                def htmlTestTaskName = file("$reports.html.destination").name

                if (carvedTests) {
                    // Just use the same?
                    reports.junitXml.destination = file("$testReportPrefix/$junitXmlTestTaskName")
                    reports.html.destination = file("$testReportPrefix/$junitXmlTestTaskName")
                }

                filter {
                    //specific test method
                    if (project.hasProperty('carvedTestsFilter')){
                        includeTestsMatching project.carvedTestsFilter
                    }
                }
            }
        }
    }

}


dependencies {
    testCompile 'junit:junit:4.12'
    compile fileTree(include: ['*.jar'], dir: 'libs')
    implementation 'com.google.android.gms:play-services-location:15.0.1'
    implementation 'com.google.android.gms:play-services-maps:15.0.1'
    //    compile 'com.google.android.gms:play-services:15.0.1'
    implementation 'com.android.support.constraint:constraint-layout:1.1.0-beta3'
    implementation 'com.android.support:support-v4:27.1.0'
    implementation 'com.android.support:customtabs:27.1.0'
    implementation 'com.android.support:animated-vector-drawable:27.1.0'
    implementation 'com.android.support:appcompat-v7:27.1.0'
    implementation 'com.android.support:support-v13:27.1.0'
    implementation 'com.android.support:design:27.1.0'
    implementation 'com.android.support:cardview-v7:27.1.0'

    implementation 'com.google.firebase:firebase-messaging:17.3.0'
    implementation 'com.google.firebase:firebase-crash:16.0.1'
    implementation 'com.google.firebase:firebase-invites:16.0.1'

    implementation 'com.google.code.gson:gson:2.8.2'
    implementation 'com.google.android.gms:play-services-ads:15.0.1'
    implementation 'com.android.support:mediarouter-v7:27.1.0'
    implementation 'com.android.support:support-vector-drawable:27.1.0'
    androidTestImplementation('com.android.support.test.espresso:espresso-core:3.0.1', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    //Firebase jobdispatcher to schedule tasks
    implementation 'com.firebase:firebase-jobdispatcher:0.8.5'
    //Here you have to put the dependaces for the testing for Espresso
    //1)
    androidTestCompile 'com.android.support.test.espresso:espresso-core:3.0.1'
    //2)
    androidTestCompile 'com.android.support.test:runner:1.0.1'
    //
    //    //Retrofit library check:
    //    compile 'com.squareup.retrofit2:retrofit:2.3.0'
    //    compile 'com.squareup.retrofit2:converter-gson:2.3.0'
    //
    //    //OkHttp library
    //    compile 'com.squareup.okhttp3:okhttp:3.9.1'
    /**
     * Title:PreferenceFragment with android-support-v4
     * Author: Mattblang
     * Date: Mar 17 '14 at 18:39
     * Code version: N/A
     * Availability:  https://stackoverflow.com/questions/9783368/alternatives-to-preferencefragment-with-android-support-v4
     */
    //This library is helping me to add PreferenceFragment support.v4
    implementation 'com.github.machinarius:preferencefragment:0.1.1'

    testImplementation 'androidx.test:core:1.4.0'
    testImplementation 'androidx.test:runner:1.3.0'
    testImplementation 'org.mockito:mockito-core:2.6.3'

    testImplementation 'org.robolectric:robolectric:4.5'
}
apply plugin: 'com.google.gms.google-services'
